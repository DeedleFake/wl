// Code generated by wlgen. DO NOT EDIT.

package {{.Package}}

import (
	{{range .ExtraImports -}}
		{{. | printf "%q"}}
	{{end -}}
	"deedles.dev/wl/wire"
)

{{range .Protocol.Interfaces}}
	{{- $name := .Name | trimPrefix $.Prefix | camel | unexport -}}
	{{- $listeners := listeners $.IsClient . -}}
	{{- $senders := senders $.IsClient . -}}

	type {{$name}}Object struct {
		listener interface {
			{{range $listeners}}
				{{- .Name | camel | export}}({{range .Args}}{{.Type | goType}}, {{end}})
			{{end}}
		}
	}

	func (obj {{$name}}Object) Dispatch(msg *wire.MessageBuffer) error {
		switch msg.Op() {
		{{- range $op, $method := $listeners}}
			case {{$op}}:
				{{range $method.Args -}}
					{{.Name}} := msg.Read{{.Type | typeFuncSuffix}}()
				{{end -}}
				if err := msg.Err(); err != nil {
					return err
				}
				obj.listener.{{.Name | camel | export}}(
					{{range $method.Args -}}
						{{.Name}},
					{{end -}}
				)
		{{end -}}
		}

		return wire.UnknownOpError{
			Interface: {{.Name | printf "%q"}},
			Type: {{if $.IsClient -}} "event" {{- else -}} "request" {{- end}},
			Op: msg.Op(),
		}
	}
{{end}}
